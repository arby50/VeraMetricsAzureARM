{
	"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"metadata": {
		"_generator": {
			"name": "bicep",
			"version": "0.34.1.11899",
			"templateHash": "6608977399677963554"
		}
	},
	"parameters": {
        "vmInstanceName": {
            "type": "string",
            "metadata": {
                "description": "The VM name"
            }
        },
        "vmSize": {
            "type": "string",
            "metadata": {
                "description": "Select the VM size"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Select the Azure region for the resources"
            }
        },
		"adminUsername": {
			"type": "string",
			"defaultValue": "jwdillonAdmin",
			"metadata": {
			"description": "Admin username for the VM"
			}
		}
	},
	"variables": {
		"adminUsername": "[parameters('adminUsername')]",
		"planInfo": {
            "planID": "verametrics_engine_vm_plan",
            "offerID": "verametrics_engine",
            "publisher": "jwdillon_com"
        },
		"networkSecurityGroupName": "[format('{0}-nsg', parameters('vmInstanceName'))]",
		"publicIPAddressName": "[format('{0}-pip', toLower(parameters('vmInstanceName')))]",
		"networkInterfaceName": "[format('{0}-nic', parameters('vmInstanceName'))]",
		"virtualNetworkName": "[format('{0}-vnet', parameters('vmInstanceName'))]",
		"subnetName": "[format('{0}-subnet', parameters('vmInstanceName'))]",
		"vmName": "[format('{0}-vm', parameters('vmInstanceName'))]",
		"subnetAddressPrefix": "10.1.0.0/24",
		"addressPrefix": "10.1.0.0/16",
		"securityType": "Standard",
		"osDiskType": "Standard_LRS",
		"nsgIdentityName": "nsgManagedIdentity",	//TODO: does this need to be named specifically, based on instanceName?
		"securityProfileJson": {
			"uefiSettings": {
				"secureBootEnabled": true,
				"vTpmEnabled": true
			},
			"securityType": "[variables('securityType')]"
		}
		// "extensionName": "GuestAttestation",
		// "extensionPublisher": "Microsoft.Azure.Security.LinuxAttestation",
		// "extensionVersion": "1.0",
		// "maaTenantName": "GuestAttestation",
		// "maaEndpoint": "[substring('emptystring', 0, 0)]"
	},
	"resources": [
		{
			"type": "Microsoft.Network/networkSecurityGroups",
			"apiVersion": "2024-05-01",
			"name": "[variables('networkSecurityGroupName')]",
			"location": "[parameters('location')]",
			"properties": {
				"securityRules": [
					{
						"name": "AllowFlaskInbound",
						"properties": {
							"priority": 101,
							"direction": "Inbound",
							"access": "Allow",
							"protocol": "Tcp",
							"sourcePortRange": "*",
							"destinationPortRange": "443",
							"sourceAddressPrefix": "Internet",
							"destinationAddressPrefix": "*"
						}
					},
					{
						"name": "DenyRDPInboundFromInternet",
						"properties": {
							"priority": 1000,
							"direction": "Inbound",
							"access": "Deny",
							"protocol": "Tcp",
							"sourcePortRange": "*",
							"destinationPortRange": "3389",
							"sourceAddressPrefix": "Internet",
							"destinationAddressPrefix": "*"
						}
					},
					{
						"name": "DenySSHInboundFromInternet",
						"properties": {
							"priority": 1001,
							"direction": "Inbound",
							"access": "Deny",
							"protocol": "Tcp",
							"sourcePortRange": "*",
							"destinationPortRange": "22",
							"sourceAddressPrefix": "Internet",
							"destinationAddressPrefix": "*"
						}
					}
				]
			}
		},
		{
			"type": "Microsoft.Network/virtualNetworks",
			"apiVersion": "2024-05-01",
			"name": "[variables('virtualNetworkName')]",
			"location": "[parameters('location')]",
			"properties": {
				"addressSpace": {
					"addressPrefixes": [
						"[variables('addressPrefix')]"
					]
				},
				"subnets": [
					{
						"name": "[variables('subnetName')]",
						"properties": {
							"networkSecurityGroup": {
								"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
							},
							"addressPrefix": "[variables('subnetAddressPrefix')]",
							"privateEndpointNetworkPolicies": "Enabled",
							"privateLinkServiceNetworkPolicies": "Enabled"
						}
					}
				]
			},
			"dependsOn": [
				"[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
			]
		},
		{
			"type": "Microsoft.Network/publicIPAddresses",
			"apiVersion": "2024-05-01",
			"name": "[variables('publicIPAddressName')]",
			"location": "[parameters('location')]",
			"sku": {
				"name": "Standard"
			},
			"properties": {
				"publicIPAllocationMethod": "Static",
				"publicIPAddressVersion": "IPv4",
				"dnsSettings": {
					"domainNameLabel": "[variables('publicIPAddressName')]"
				},
				"idleTimeoutInMinutes": 4
			}
		},
		{
			"type": "Microsoft.ManagedIdentity/userAssignedIdentities",
			"apiVersion": "2023-01-31",
			"name": "[variables('nsgIdentityName')]",
			"location": "[parameters('location')]"
		},
		{
			"type": "Microsoft.Authorization/roleAssignments",
			"apiVersion": "2022-04-01",
			"name": "[guid(resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName')), reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('nsgIdentityName')), '2023-01-31').principalId, '4d97b98b-1d4f-4787-a291-c67834d212e7')]",
			"properties": {
				"roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4d97b98b-1d4f-4787-a291-c67834d212e7')]",
				"principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('nsgIdentityName')), '2023-01-31').principalId]"
			},
			"dependsOn": [
				"[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('nsgIdentityName'))]",
				"[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
			]
		},
		{
			"type": "Microsoft.Network/networkInterfaces",
			"apiVersion": "2024-05-01",
			"name": "[variables('networkInterfaceName')]",
			"location": "[parameters('location')]",
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"subnet": {
								"id": "[reference(resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName')), '2023-09-01').subnets[0].id]"
							},
							"privateIPAllocationMethod": "Dynamic",
							"publicIPAddress": {
								"id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
							}
						}
					}
				],
				"networkSecurityGroup": {
					"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
				}
			},
			"dependsOn": [
				"[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",
				"[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
				"[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
			]
		},
		{
			"type": "Microsoft.Compute/virtualMachines",
			"apiVersion": "2023-09-01",
			"name": "[variables('vmName')]",
			"location": "[parameters('location')]",

			"plan": {
                "name": "[variables('planInfo').planID]",
                "product": "[variables('planInfo').offerID]",
                "publisher": "[variables('planInfo').publisher]"
            },
			"identity": {
				"type": "UserAssigned",
				"userAssignedIdentities": {
				"[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('nsgIdentityName'))]": {}
				}
			},			
			"properties": {
				"hardwareProfile": {
					"vmSize": "[parameters('vmSize')]"
				},
                "storageProfile": {
                    "imageReference": {
                        "offer": "[variables('planInfo').offerID]",
                        "publisher": "[variables('planInfo').publisher]",
                        "sku": "[variables('planInfo').planID]",
                        "version": "latest"
                    },
                    "osdisk": {
                        "name": "[concat(variables('vmName'), '-osDisk')]",
                        "createOption": "FromImage",
                        "managedDisk": {
                           	"storageAccountType": "[variables('osDiskType')]"
                        },
                        "caching": "ReadWrite"
                    }
                },
				"osProfile": {
					"computerName": "[variables('vmName')]",
					"adminUsername": "[variables('adminUsername')]",
					"linuxConfiguration": {
						"disablePasswordAuthentication": true,
						"ssh": {
							"publicKeys": [
								{
									"path": "[format('/home/{0}/.ssh/authorized_keys', variables('adminUsername'))]",
									"keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7laRyN4B3YZmVrDEZLZoIuDep9OtVwikHFQMmkjdgBsOI9P6j3CJEw7W9Z3QtR5N8JkZKwVQRHE5LlO9XP6w5Y4yF4i4X2z7qKJGNjHr2mY+9YRt4L6yOyQa6Zl7F placeholder-key-replaced-by-script"
								}
							]
						}
					}
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
						}
					]
				},
				"securityProfile": "[if(equals(variables('securityType'), 'TrustedLaunch'), variables('securityProfileJson'), null())]"
			},
			"dependsOn": [
				"[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
			]
		},


		{
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"apiVersion": "2023-09-01",
			"name": "[format('{0}/{1}', variables('vmName'), 'SSHSetupScript')]",
			"location": "[parameters('location')]",
			"properties": {
				"publisher": "Microsoft.Azure.Extensions",
				"type": "CustomScript",
				"typeHandlerVersion": "2.1",
				"autoUpgradeMinorVersion": true,
				"settings": {
					"commandToExecute": "[concat('bash -c \"', base64ToString('IyEvYmluL2Jhc2gKCiMgdGhpcyBzY3JpcHQgaXMgdXNlZCB0byBzZXR1cCB0aGUgc3NoIGFjY2VzcyBmb3IgdGhlIGFkbWluIHVzZXIKIyBpdCBpcyBydW4gaW5zaWRlIHRoZSBtYWluVGVtcGxhdGUuanNvbiBmaWxlLCBiYXNlNjQgZW5jb2RlZAojIG1pY3Jvc29mdCByZXF1aXJlcyBzc2ggdWlkOnB3ZCBhdXRoIHRvIGJlIGVuYWJsZWQgd2hlbiBjcmVhdGlnIGZyb20gYSB0ZW1wbGF0ZQojIHRoaXMgc2NyaXB0IGRpc2FibGVzIGl0IGFuZCBzZXRzIHVwIHNzaCBrZXkgYXV0aAojIGl0IGFsc28gY2hhbmdlcyB0aGUgb3duZXJzaGlwIG9mIHRoZSBmbGFzayBhcHAgdG8gdGhlIGFkbWluIHVzZXIKIyBhbmQgcmVzdGFydHMgdGhlIHNzaCBzZXJ2aWNlCiMgaXQgaXMgcnVuIGFzIGEgY3VzdG9tIHNjcmlwdCBleHRlbnNpb24gb24gdGhlIHZtCiMgaXQgY29wZXMgdGhlIHNzaCBrZXkgZnJvbSBhIHNhZmUgbG9jYXRpb24gKC91c3IvbG9jYWwvc3VwcG9ydC8pIHRvIHRoZSBhZG1pbiB1c2VyJ3MgLnNzaCBkaXJlY3RvcnkKCiMgUGFyc2UgcGFyYW1ldGVycwpSRVNPVVJDRV9HUk9VUF9JRD0iJDEiClNVQlNDUklQVElPTl9JRD0iJDIiCgojIFRPRE86IGFkZCB0aGlzIGNoZWNrIGJhY2sgaW4KIyAyMDI1MDgxNTpSeWFuLT4KIyAgICAgIGF6IGxvZ2luCiMgICAgICBheiBncm91cCBjcmVhdGUgLS1uYW1lIHRlc3QtdGVtcGxhdGUtcmcgLS1sb2NhdGlvbiBlYXN0dXMKIyAgICAgIGF6IGRlcGxveW1lbnQgZ3JvdXAgdmFsaWRhdGUgLS1yZXNvdXJjZS1ncm91cCB0ZXN0LXRlbXBsYXRlLXJnIC0tdGVtcGxhdGUuamVzby4tamVzby4gamVzb24gLS1wYXJhbWV0ZXJzIHBhcmFtZXRlcnMuZ2Vzb24gLS1uYW1lIHRlc3QtZGVwbG95bWVudAojICAgICAgUmVzb3VyY2U6IC1jOiBsaW5lIDE4OiBzeW50YXggZXJyb3I6IHVuZXhwZWN0ZWQgZW5kIG9mIGZpbGVcbicKIyBpZiBbIC16ICIkUkVTT1VSQ0VfR1JPVVBfSUQiIF07IHRoZW4KIyAgICAgZWNobyAiRXJyb3I6IFJlc291cmNlIElEIG5vdCBwcm92aWRlZCIKIyAgICAgZXhpdCAxCiMgZmkKIyBpZiBbIC16ICIkU1VCU0NSSVBUSU9OX0lEIiBdOyB0aGVuCIyAgICAgZWNobyAiRXJyb3I6IFJlc291cmNlIElEIG5vdCBwcm92aWRlZCIKIyAgICAgZXhpdCAxCiMgZmkKCjMgQ3JlYXRlIGFkbWluIHVzZXIKdXNlcmFkZCAtbSAtcyAvYmluL2Jhc2ggandkaWxsb25BZG1pbgp+Cg0jIENyZWF0ZSAuX3NzaCBkaXJlY3RvcnkKbWtmZGlyIC1wIC9ob21lL2p3ZGlsbG9uQWRtaW4vLnNzaApjaG1vZCA3MDAgL2hvbWUvandkaWxsb25BZG1pbi8uc3NoCgojIENvcHkgcHJlLXBsYWNlZCBTU0gga2V5IGZyb20gc2FmZSBsb2NhdGlvbgppZiBbIC1mIC91c3IvbG9jYWwvc3VwcG9ydC9hdXRob3JpemVkX2tleXMgXTsgdGhlbgojICAgIGNwIC91c3IvbG9jYWwvc3VwcG9ydC9hdXRob3JpemVkX2tleXMgL2hvbWUvandkaWxsb25BZG1pbi8uc3NoL2F1dGhvcml6ZWRfa2V5cwogICAgZWNobyAiU1NIIGtleSBjb3BpZWQgZnJvbSBwcmUtcGxhY2VkIGxvY2F0aW9uIgplbHNlCg0KICAgIGVjaG8gIk5vIHByZS1wbGFjZWQgU1NIIGtleSBmb3VuZCBhdCAvdXNyL2xvY2FsL3N1cHBvcnQvYXV0aG9yaXplZF9rZXlzIgoKIyBTZXQgY29ycmVjdCBwZXJtaXNzaW9ucwpjaG1vZCA2MDAgL2hvbWUvandkaWxsb25BZG1pbi8uc3NoL2F1dGhvcml6ZWRfa2V5cwpjaG93biAtUiBqd2RpbGxvbkFkbWluOmp3ZGlsbG9uQWRtaW4gL2hvbWUvandkaWxsb25BZG1pbi8uc3NoCgojIENoYW5nZSBvd25lcnNoaXAgb2YgRmxhc2sgYXBwIHRvIGp3ZGlsbG9uQWRtaW4KY2hvd24gLVIgandkaWxsb25BZG1p
nOmp3ZGlsbG9uQWRtaW4gL3Zhci93d3cvaHRtbC8KY2hvd24gLVIgandkaWxsb25BZG1pbjpqd2RpbGxv
bkFkbWluIC9vcHQvc3BhcmsvCgojIEVuc3VyZSBTU0ggY29u
ZmlnIGFsbG93cyBrZXkgYXV0aGVudGljYXRpb24gb25seQp
zZWQgLWkgJ1MvJ1B1YktleUF1dGhlbnRpY2F0aW9uIHk
vUHVia2V5QXV0aGVudGljYXRpb24geWVzL2cnIC9ldGMv
c3NoL3NzaGRfY29uZmlnCnNlZCAtaSAnUy9QdWJLZXlBd
XRoZW50aWNhdGlvbiBuby9QdWJrZXlBdXRoZW50aWNhdGl
vbiB5ZXMvJ2cgL2V0Yy9zc2gv
c3NoZF9jb25maWcKCiMgUmVzdGFydCBTU0ggc2VydmljZQpze
XN0ZW1jdGwgcmVzdGFydCBzc2gKCiMgQ3JlYXRlIGVudmly
b25tZW50IGZpbGUgZm9yIHRoZSBhcHBsaWNhdGlvbgpjYXQg
PiAv
ob21l
L2p3ZGlsbG9uQWRtaW4vLmVudm
g8PApFU09GCkF6VVJFX1JFU09V
UkNFX0dST1VQX0lEP
SJWUkVTT1VSQ0VfR1JPVV
BfSUQnCnNVQ
lNDUklQVE
lPTl9JR D0iJFNV
QlNDUklQVE
lPTl9J
RCIKRU9GCgojIFNldCBvd25lcnNo aXAgb2YgdGhlIGVudmlyb25tZW50IGZpbGUKY2hvd24gandkaWxsb25BZG1p
bjpqd2RpbGxv
bkFkbWluIC9ob21l
L2p3ZGlsbG9uQWRtaW4vLmVudn
Y2 0wMDAgL2hvbWUv
amd3ZGlsbG9uQWRtaW4vLmVudgpj
aG1vZCA
2MDAgL2hvbWUv
amd3ZGlsbG9uQWRtaW4vLmVudgpj
aG1v
ZAogICAgZWNobyAiU1NIIGFjY2VzcyBzZXR1cCBjb21wbGV0
ZSBmb3Ig
amd3ZGlsbG9uQWRtaW4iCg
0KICAgIGVjaG8gIlZNIC
Y29uZmlndXJlZCB3aXRoIFJlc291cmNlIEdy
b3VwIElEOiAkUkVTT0VSQ0VfR1JPV
V9JRCB
Ii
CiAgICBlY2hvICJWTSBjb25maWd1cmVkIHdpdGggU3Vic2NyaXB0
aW9u IURp
OiAkU1VC

U0NSSVBO
VElPTl
9JRCIK'"), '\" \"', resourceGroup().id, '\" \"', subscription().id, '\"')]"
				}
			},
			"dependsOn": [
				"[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
			]
		}
	],
	"outputs": {
		"hostname": {
			"type": "string",
			"value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName')), '2023-09-01').dnsSettings.fqdn]"
		}
	}
}